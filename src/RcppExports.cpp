// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// HU_ratio_nodule_progression_detection_slice_cpp
List HU_ratio_nodule_progression_detection_slice_cpp(NumericMatrix A1_slice, NumericMatrix A2_slice, Nullable<int> anno_i, Nullable<int> anno_j, NumericMatrix nodule_block_list_slice, int split_num, int block_num, NumericVector detection_threshold);
RcppExport SEXP _NPDS4Clib_HU_ratio_nodule_progression_detection_slice_cpp(SEXP A1_sliceSEXP, SEXP A2_sliceSEXP, SEXP anno_iSEXP, SEXP anno_jSEXP, SEXP nodule_block_list_sliceSEXP, SEXP split_numSEXP, SEXP block_numSEXP, SEXP detection_thresholdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type A1_slice(A1_sliceSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type A2_slice(A2_sliceSEXP);
    Rcpp::traits::input_parameter< Nullable<int> >::type anno_i(anno_iSEXP);
    Rcpp::traits::input_parameter< Nullable<int> >::type anno_j(anno_jSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type nodule_block_list_slice(nodule_block_list_sliceSEXP);
    Rcpp::traits::input_parameter< int >::type split_num(split_numSEXP);
    Rcpp::traits::input_parameter< int >::type block_num(block_numSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type detection_threshold(detection_thresholdSEXP);
    rcpp_result_gen = Rcpp::wrap(HU_ratio_nodule_progression_detection_slice_cpp(A1_slice, A2_slice, anno_i, anno_j, nodule_block_list_slice, split_num, block_num, detection_threshold));
    return rcpp_result_gen;
END_RCPP
}
// bwlabel
List bwlabel(NumericMatrix x);
RcppExport SEXP _NPDS4Clib_bwlabel(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(bwlabel(x));
    return rcpp_result_gen;
END_RCPP
}
// get_border_indices
IntegerVector get_border_indices(IntegerMatrix labels, LogicalMatrix borders);
RcppExport SEXP _NPDS4Clib_get_border_indices(SEXP labelsSEXP, SEXP bordersSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix >::type labels(labelsSEXP);
    Rcpp::traits::input_parameter< LogicalMatrix >::type borders(bordersSEXP);
    rcpp_result_gen = Rcpp::wrap(get_border_indices(labels, borders));
    return rcpp_result_gen;
END_RCPP
}
// create_label_mask
LogicalVector create_label_mask(IntegerVector indices, IntegerVector borders_indices);
RcppExport SEXP _NPDS4Clib_create_label_mask(SEXP indicesSEXP, SEXP borders_indicesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type indices(indicesSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type borders_indices(borders_indicesSEXP);
    rcpp_result_gen = Rcpp::wrap(create_label_mask(indices, borders_indices));
    return rcpp_result_gen;
END_RCPP
}
// create_clear_mask
LogicalMatrix create_clear_mask(IntegerMatrix labels, LogicalVector label_mask);
RcppExport SEXP _NPDS4Clib_create_clear_mask(SEXP labelsSEXP, SEXP label_maskSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix >::type labels(labelsSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type label_mask(label_maskSEXP);
    rcpp_result_gen = Rcpp::wrap(create_clear_mask(labels, label_mask));
    return rcpp_result_gen;
END_RCPP
}
// clear_border_pixels
NumericMatrix clear_border_pixels(NumericMatrix out, LogicalMatrix mask, double bgval);
RcppExport SEXP _NPDS4Clib_clear_border_pixels(SEXP outSEXP, SEXP maskSEXP, SEXP bgvalSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type out(outSEXP);
    Rcpp::traits::input_parameter< LogicalMatrix >::type mask(maskSEXP);
    Rcpp::traits::input_parameter< double >::type bgval(bgvalSEXP);
    rcpp_result_gen = Rcpp::wrap(clear_border_pixels(out, mask, bgval));
    return rcpp_result_gen;
END_RCPP
}
// clear_border
NumericMatrix clear_border(NumericMatrix labels, int buffer_size, double bgval);
RcppExport SEXP _NPDS4Clib_clear_border(SEXP labelsSEXP, SEXP buffer_sizeSEXP, SEXP bgvalSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type labels(labelsSEXP);
    Rcpp::traits::input_parameter< int >::type buffer_size(buffer_sizeSEXP);
    Rcpp::traits::input_parameter< double >::type bgval(bgvalSEXP);
    rcpp_result_gen = Rcpp::wrap(clear_border(labels, buffer_size, bgval));
    return rcpp_result_gen;
END_RCPP
}
// generate_lung_tissue_blocks_slice_cpp
NumericMatrix generate_lung_tissue_blocks_slice_cpp(NumericMatrix image_slice, int image_size, int split_size);
RcppExport SEXP _NPDS4Clib_generate_lung_tissue_blocks_slice_cpp(SEXP image_sliceSEXP, SEXP image_sizeSEXP, SEXP split_sizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type image_slice(image_sliceSEXP);
    Rcpp::traits::input_parameter< int >::type image_size(image_sizeSEXP);
    Rcpp::traits::input_parameter< int >::type split_size(split_sizeSEXP);
    rcpp_result_gen = Rcpp::wrap(generate_lung_tissue_blocks_slice_cpp(image_slice, image_size, split_size));
    return rcpp_result_gen;
END_RCPP
}
// generate_nodule_block_list_slice_cpp
NumericMatrix generate_nodule_block_list_slice_cpp(NumericMatrix image_slice, NumericMatrix image_reg_slice, int x_start, int x_end, int y_start, int y_end, int split_size);
RcppExport SEXP _NPDS4Clib_generate_nodule_block_list_slice_cpp(SEXP image_sliceSEXP, SEXP image_reg_sliceSEXP, SEXP x_startSEXP, SEXP x_endSEXP, SEXP y_startSEXP, SEXP y_endSEXP, SEXP split_sizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type image_slice(image_sliceSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type image_reg_slice(image_reg_sliceSEXP);
    Rcpp::traits::input_parameter< int >::type x_start(x_startSEXP);
    Rcpp::traits::input_parameter< int >::type x_end(x_endSEXP);
    Rcpp::traits::input_parameter< int >::type y_start(y_startSEXP);
    Rcpp::traits::input_parameter< int >::type y_end(y_endSEXP);
    Rcpp::traits::input_parameter< int >::type split_size(split_sizeSEXP);
    rcpp_result_gen = Rcpp::wrap(generate_nodule_block_list_slice_cpp(image_slice, image_reg_slice, x_start, x_end, y_start, y_end, split_size));
    return rcpp_result_gen;
END_RCPP
}
// generate_nodule_block_list_slice_cpp_v2
NumericVector generate_nodule_block_list_slice_cpp_v2(NumericMatrix image_slice, NumericMatrix image_reg_slice, int x_start, int x_end, int y_start, int y_end, int split_size);
RcppExport SEXP _NPDS4Clib_generate_nodule_block_list_slice_cpp_v2(SEXP image_sliceSEXP, SEXP image_reg_sliceSEXP, SEXP x_startSEXP, SEXP x_endSEXP, SEXP y_startSEXP, SEXP y_endSEXP, SEXP split_sizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type image_slice(image_sliceSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type image_reg_slice(image_reg_sliceSEXP);
    Rcpp::traits::input_parameter< int >::type x_start(x_startSEXP);
    Rcpp::traits::input_parameter< int >::type x_end(x_endSEXP);
    Rcpp::traits::input_parameter< int >::type y_start(y_startSEXP);
    Rcpp::traits::input_parameter< int >::type y_end(y_endSEXP);
    Rcpp::traits::input_parameter< int >::type split_size(split_sizeSEXP);
    rcpp_result_gen = Rcpp::wrap(generate_nodule_block_list_slice_cpp_v2(image_slice, image_reg_slice, x_start, x_end, y_start, y_end, split_size));
    return rcpp_result_gen;
END_RCPP
}
// process_lung_regions
List process_lung_regions(IntegerMatrix label_image, IntegerMatrix regions);
RcppExport SEXP _NPDS4Clib_process_lung_regions(SEXP label_imageSEXP, SEXP regionsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix >::type label_image(label_imageSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type regions(regionsSEXP);
    rcpp_result_gen = Rcpp::wrap(process_lung_regions(label_image, regions));
    return rcpp_result_gen;
END_RCPP
}
// regionprops_bbox
IntegerMatrix regionprops_bbox(List input);
RcppExport SEXP _NPDS4Clib_regionprops_bbox(SEXP inputSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type input(inputSEXP);
    rcpp_result_gen = Rcpp::wrap(regionprops_bbox(input));
    return rcpp_result_gen;
END_RCPP
}
// trapz_rcpp
double trapz_rcpp(NumericVector x, NumericVector y);
RcppExport SEXP _NPDS4Clib_trapz_rcpp(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(trapz_rcpp(x, y));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_NPDS4Clib_HU_ratio_nodule_progression_detection_slice_cpp", (DL_FUNC) &_NPDS4Clib_HU_ratio_nodule_progression_detection_slice_cpp, 8},
    {"_NPDS4Clib_bwlabel", (DL_FUNC) &_NPDS4Clib_bwlabel, 1},
    {"_NPDS4Clib_get_border_indices", (DL_FUNC) &_NPDS4Clib_get_border_indices, 2},
    {"_NPDS4Clib_create_label_mask", (DL_FUNC) &_NPDS4Clib_create_label_mask, 2},
    {"_NPDS4Clib_create_clear_mask", (DL_FUNC) &_NPDS4Clib_create_clear_mask, 2},
    {"_NPDS4Clib_clear_border_pixels", (DL_FUNC) &_NPDS4Clib_clear_border_pixels, 3},
    {"_NPDS4Clib_clear_border", (DL_FUNC) &_NPDS4Clib_clear_border, 3},
    {"_NPDS4Clib_generate_lung_tissue_blocks_slice_cpp", (DL_FUNC) &_NPDS4Clib_generate_lung_tissue_blocks_slice_cpp, 3},
    {"_NPDS4Clib_generate_nodule_block_list_slice_cpp", (DL_FUNC) &_NPDS4Clib_generate_nodule_block_list_slice_cpp, 7},
    {"_NPDS4Clib_generate_nodule_block_list_slice_cpp_v2", (DL_FUNC) &_NPDS4Clib_generate_nodule_block_list_slice_cpp_v2, 7},
    {"_NPDS4Clib_process_lung_regions", (DL_FUNC) &_NPDS4Clib_process_lung_regions, 2},
    {"_NPDS4Clib_regionprops_bbox", (DL_FUNC) &_NPDS4Clib_regionprops_bbox, 1},
    {"_NPDS4Clib_trapz_rcpp", (DL_FUNC) &_NPDS4Clib_trapz_rcpp, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_NPDS4Clib(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
